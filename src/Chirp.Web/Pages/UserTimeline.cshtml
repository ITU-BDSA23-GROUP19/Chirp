@page "/{author}"
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Chirp.Web.Pages.UserTimelineModel
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
    string author = HttpContext.GetRouteValue("author")!.ToString()!;
}

<div>
    @if (author != null && await Model.AuthorRepository.CheckAuthorExistsAsync(author))
    {
        <div class="cheepbox">
            @if (User.Identity != null && User.Identity.IsAuthenticated)
            {
                <h3>What's on your mind @(User.Identity.Name)?</h3>
                <form method="post">
                    <input style="float: left" type="text" asp-for="Text">
                    <input type="submit" value="Share" , asp-action="OnPost(text)">
                </form>
            }
            else
            {
                <em>You can't cheep when you aren't logged in!</em>
            }
        </div>

        <div>
            <h2> <span style="display: inline-block;">@author's Timeline</span>
                @if (User.Identity != null && User.Identity.Name != null && User.Identity.Name != author &&
               User.Identity.IsAuthenticated)
                {
                    @if (await Model.FollowRepository.CheckFollowExistsAsync(User.Identity.Name, author))
                    {
                        <span style="float: right;">
                            <form asp-page-handler="Unfollow" method="post">
                                <input type="hidden" name="author" value="@(author)" />
                                <button id="unfollowButton" type="submit">Unfollow</button>
                            </form>
                        </span>
                    }
                    else
                    {
                        <span style="float: right;">
                            <form asp-page-handler="Follow" method="post">
                                <input type="hidden" name="author" value="@(author)" />
                                <button id="followButton" type="submit">Follow</button>
                            </form>
                        </span>
                    }
                }
            </h2>
            <div>
                <h3> Following: @(Model.FollowingsCount) </h3>
                <h3> Followers: @(Model.FollowersCount) </h3>
            </div>


            @if (Model.Cheeps.Any())
            {
                <ul id="messagelist" class="cheeps">
                    @foreach (CheepDTO cheep in Model.Cheeps)
                    {
                        <li>
                            <span style="display: inline-block;">
                                <strong>
                                    <a href="/@cheep.Author">@cheep.Author</a>
                                </strong>
                            </span>

                            @if (User.Identity != null && User.Identity.Name != null && User.Identity.Name != cheep.Author &&
                           User.Identity.IsAuthenticated)
                            {
                                <span style="display: inline-block;">
                                    @if (await Model.FollowRepository.CheckFollowExistsAsync(User.Identity.Name, cheep.Author))
                                    {

                                        <form asp-page-handler="Unfollow" method="post">
                                            <input type="hidden" name="author" value="@(cheep.Author)" />
                                            <button id="unfollowButton" type="submit">Unfollow</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-page-handler="Follow" method="post">
                                            <input type="hidden" name="author" value="@(cheep.Author)" />
                                            <button id="followButton" type="submit">Follow</button>
                                        </form>
                                    }
                                </span>
                            }
                            <div>
                                <div style="display: flex; justify-content: space-between;">
                                    <div>
                                        @cheep.Text
                                    </div>
                                    <div style="white-space: nowrap; align-self: flex-end;">
                                        <small>&mdash; @cheep.TimeStamp</small>
                                    </div>

                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <em>There are no cheeps.</em>
            }
        </div>

        <div style="text-align:center;">
            @if (Model.CurrentPage > 1)
            {
                <a href="/@author/?page=1">[&lt;&lt;]</a>
                <a href="/@author/?page=@(Model.CurrentPage - 1)">[&lt;]</a>
            }

            @for (int i = int.Max(1, Model.CurrentPage - 5); i <= int.Min(Model.PageCount, Model.CurrentPage + 5); i++)
            {
                if (i == Model.CurrentPage)
                {
                    <b>[@i]</b>
                    continue;
                }

                <a href="/@author/?page=@i">[@i]</a>
            }

            @if (Model.CurrentPage < Model.PageCount)
            {
                <a href="/@author/?page=@(Model.CurrentPage + 1)">[&gt;]</a>
                <a href="/@author/?page=@Model.PageCount">[&gt;&gt;]</a>
            }
        </div>
    }
    else
    {
        <em>This user does not exist!</em>
    }
</div>
